@model HopeWorldWide.Models.ReportsRequestsViewModel

@{
    ViewBag.Title = "Reports and Requests Dashboard";
    Layout = "~/Views/Shared/AssetLayout.cshtml";  // Use the layout file for consistent UI
}

<div class="content">
    <div class="header text-center">
        <h2>Reports and Requests Dashboard</h2>
    </div>

    <!-- Flexbox container to display reports and requests side by side -->
    <div class="dashboard-container">
        <!-- Reports Section -->
        <div class="section reports">
            <h3>Reports</h3>
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Asset Code</th>
                            <th>Issue Description</th>
                            <th>Timestamp</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Reports != null && Model.Reports.Any())
                        {
                            @foreach (var report in Model.Reports)
                            {
                                <tr id="report-@report.assetCode">
                                    <td>@report.assetCode</td>
                                    <td>@report.issueDescription</td>
                                    <td>@report.timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                    <td>
                                        <button class="btn btn-danger resolve-report" data-id="@report.assetCode">Resolve</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center">No reports available.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Requests Section -->
        <div class="section requests">
            <h3>Requests</h3>
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Category</th>
                            <th>Employee ID</th>
                            <th>Reason</th>
                            <th>Timestamp</th>
                            <th>Type</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Requests != null && Model.Requests.Any())
                        {
                            @foreach (var request in Model.Requests)
                            {
                                <tr id="request-@request.employeeId">
                                    <td>@request.category</td>
                                    <td>@request.employeeId</td>
                                    <td>@request.reason</td>
                                    <td>@request.timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                    <td>@request.type</td>
                                    <td>
                                        <button class="btn btn-danger resolve-request" data-id="@request.employeeId">Resolve</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center">No requests available.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Custom CSS -->
<style>
    .dashboard-container {
        display: flex;
        justify-content: space-between;
        gap: 20px;
        margin-top: 30px;
        flex-wrap: wrap;
    }

    .section {
        flex: 1;
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

        .section h3 {
            margin-bottom: 15px;
            font-size: 1.5em;
            color: #333;
        }

    .table-container {
        overflow-x: auto;
        margin-top: 20px;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .table th {
            background-color: #f0f0f0;
            color: #333;
        }

        .table tbody tr:hover {
            background-color: #f5f5f5;
        }

    .btn-danger {
        background-color: #4A90E2;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
    }

        .btn-danger:disabled {
            background-color: #c4c4c4;
            cursor: not-allowed;
        }

        .btn-danger:hover {
            background-color: #1e70bf;
        }
</style>

<!-- Updated JavaScript -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        function handleResolve(button, url, id) {
            button.textContent = "Resolving...";
            button.disabled = true;

            fetch(url, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById(id).remove();
                    } else {
                        alert(data.message || "Failed to resolve. Please try again.");
                    }
                })
                .catch(error => alert("Error: " + error))
                .finally(() => {
                    button.textContent = "Resolve";
                    button.disabled = false;
                });
        }

        // Resolve buttons for reports
        document.querySelectorAll(".resolve-report").forEach(button => {
            button.addEventListener("click", function () {
                const assetCode = this.getAttribute("data-id");
                if (confirm("Are you sure you want to resolve this report?")) {
                    handleResolve(this, `/ReportsRequests/ResolveReport?assetCode=${assetCode}`, `report-${assetCode}`);
                }
            });
        });

        // Resolve buttons for requests
        document.querySelectorAll(".resolve-request").forEach(button => {
            button.addEventListener("click", function () {
                const employeeId = this.getAttribute("data-id");
                if (confirm("Are you sure you want to resolve this request?")) {
                    handleResolve(this, `/ReportsRequests/ResolveRequest?employeeId=${employeeId}`, `request-${employeeId}`);
                }
            });
        });
    });
</script>
